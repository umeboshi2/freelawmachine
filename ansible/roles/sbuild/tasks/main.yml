---
###################################################################
#
#  Base debian setup
#
####################################################################

- name: install schroot packages
  apt:
    state: latest
    update_cache: yes
    cache_valid_time: 3600
    autoremove: yes
    pkg:
      - schroot
      - debootstrap
      - git-buildpackage
      - ccache
      - libeatmydata1
      - sbuild
      
- name: add sbuild user to sbuild group
  user:
    name: "{{ sbuild_user }}"
    groups: sbuild
    append: true
    
- name: add .sbuildrc for vagrant user
  become_user: "{{ sbuild_user }}"
  template:
    src: sbuildrc
    dest: ~/.sbuildrc

- name: create logs directory
  become_user: "{{ sbuild_user }}"
  file:
    state: directory
    path: "{{ build_log_dir }}"
    
- name: setup schroot_roots_directory
  file:
    path: "{{ schroot_roots_directory }}"
    state: directory

- name: configure schroot default copyfiles
  template:
    src: schroot-default-copyfiles
    dest: /etc/schroot/default/copyfiles
  when: use_apt_cache

- name: use apt proxy in sbuild chroot
  lineinfile:
    dest: /etc/schroot/sbuild/copyfiles
    line: /etc/apt/apt.conf.d/000apt-cacher-ng-proxy
  when: use_apt_cache

- name: add bind mounts to sbuild chroot
  lineinfile:
    dest: /etc/schroot/sbuild/fstab
    line: "{{ item }}"
  with_items:
    - /home /home none rw,bind 0 0
    #- /vagrant /vagrant none rw,bind 0 0
    
- name: create sbuild chroot 
  command:
  args:
    argv:
      - sbuild-createchroot
      - --include=eatmydata,ccache,gnupg
      - "{{ sbuild_distribution }}"
      - "{{ sbuild_distribution }}"
      #- http://archive.ubuntu.com/ubuntu
      - http://ftp.us.debian.org/debian
    chdir: "{{ schroot_roots_directory }}"
    creates: "{{ schroot_roots_directory }}/{{ sbuild_distribution}}"
  register: sbuild_chroot_created
  when: not use_apt_cache

- name: create sbuild chroot (using apt-cache proxy)
  command:
  args:
    argv:
      - sbuild-createchroot
      - --include=eatmydata,ccache,gnupg
      - "{{ sbuild_distribution }}"
      - "{{ sbuild_distribution }}"
      #- http://archive.ubuntu.com/ubuntu
      - http://ftp.us.debian.org/debian
    chdir: "{{ schroot_roots_directory }}"
    creates: "{{ schroot_roots_directory }}/{{ sbuild_distribution}}"
  environment:
    http_proxy: "{{ aptproxy }}"
  register: sbuild_chroot_created
  when: use_apt_cache

- name: copy sources.list to sbuild chroot
  copy:
    src: /etc/apt/sources.list
    dest: "{{ schroot_roots_directory }}/{{ sbuild_distribution }}/etc/apt/sources.list"

- name: copy source repo lists to sbuild chroot
  copy:
    src: "/etc/apt/sources.list.d/{{ item }}"
    dest: "{{ schroot_roots_directory }}/{{ sbuild_distribution }}/etc/apt/sources.list.d/{{ item }}"
  with_items:
    - bionic-main.list
    - bionic-universe.list
    - bionic-multiverse.list
  when: false
  
- name: copy local sources.list to sbuild chroot
  template:
    src: local-apt-source
    dest: "{{ schroot_roots_directory }}/{{ sbuild_distribution }}/etc/apt/sources.list.d/local.list"
  when: false
  
- name: import local apt key to sbuild chroot
  become_user: "{{ sbuild_user }}"
  shell: gpg --export | sudo schroot -u root -c source:{{ sbuild_distribution}}-amd64-sbuild apt-key add -
  when: false
  
- name: update sbuild chroot
  shell: sbuild-update -udcar {{ sbuild_distribution }}-amd64-sbuild
  when: sbuild_chroot_created is defined
  
  
