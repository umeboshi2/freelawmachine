---
###################################################################
#
#  Solr service role
#
###################################################################
- name: make sure java is installed (using openjdk)
  apt:
    pkg: "openjdk-{{ openjdk_major_version }}-jre-headless"
    state: latest
    update_cache: yes
    cache_valid_time: 3600

- name: make solr log and cores directories
  become_user: root
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_user }}"
  with_items:
    - "{{ solr_log_directory }}"
    - "{{ cores_directory }}"

- name: download and unpack solr
  become_user: root
  unarchive:
    src="{{ solr_archive }}"
    dest="{{ install_root }}"
    remote_src=yes
    owner="{{ solr_user }}"
    group="{{ solr_user }}"
    creates="{{ install_root }}/solr-{{ solr_version }}"

- name: symlink /usr/local/solr
  become_user: root
  file:
    state=link
    path="{{ solr_run_directory }}"
    src="{{ install_root }}/solr-{{ solr_version }}"
    owner="{{ solr_user }}"
    group="{{ solr_user }}"

- name: make sure daemon is installed
  apt:
    pkg=daemon
    state=latest
    update_cache=yes
    cache_valid_time=3600

- name: install Solr daemon config
  become_user: root
  template: src=solr.sysv dest=/etc/init.d/solr mode=0755

- name: add logrotate settings
  become_user: root
  template: src=solr.logrotate dest=/etc/logrotate.d/solr

- name: configure solr cores...
  become_user: "{{ solr_user }}"
  include: cores.yml

- name: remove default collection1 example configs
  become_user: root
  file: state=absent path="{{ solr_run_directory }}/example/solr/collection1"

- name: symlink our collection1 core to the CL expected location
  become_user: root
  file:
    state=link
    path="{{ solr_run_directory }}/example/solr/collection1"
    src="{{ cores_directory }}/collection1"
    owner="{{ solr_user }}"
    group="{{ solr_user }}"

- name: start Solr service
  become_user: root
  service:
    name: solr
    state: started
    enabled: yes
